import aiosqlite
from bot.db.crud.user import get_user, get_all_admins
from ..bike import get_bike_by_id

import json

from cardlink._types import Bill, BillStatus
from cardlink.client import CardLink

from aiogram import Bot

from aiogram.types import InlineKeyboardButton, InlineKeyboardMarkup

from bot.config import cl

from .config import DB_PATH, t

import aiosqlite
from datetime import datetime

from ..names import get_personal_data
from ..rent_data import add_rent_data




async def check_payments(bot: Bot) -> None:
    admins = await get_all_admins()
    async with aiosqlite.connect(DB_PATH) as conn:
        cursor = await conn.cursor()

        await cursor.execute(f'''
            SELECT id, bill_id, user_id, amount, currency, days, created_at, message_id
            FROM {t}
            WHERE status = 'pending'
            LIMIT 10
        ''')

        pending_payments = await cursor.fetchall()

        for payment in pending_payments:
            payment_id, bill_id, user_id, amount, currency, days, created_at, message_id = payment


            await cursor.execute("""
            SELECT username
            FROM users
            WHERE tg_id = ?
            """, (user_id, ))

            user = await cursor.fetchone()

            pd = await get_personal_data(user[1])



            bill: Bill = await cl.get_bill_status(id=bill_id)

            user_keyboard = InlineKeyboardMarkup(
                inline_keyboard=[
                    [
                        InlineKeyboardButton(text="üè† –í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="main")
                    ],
                    [
                        InlineKeyboardButton(text="üë§ –õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç", callback_data="profile")
                    ]
                ]
            )
            admin_keyboard = InlineKeyboardMarkup(
                inline_keyboard=[
                    [
                        InlineKeyboardButton(text="üè† –í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="main")
                    ]
                ]
            )

            if bill.status != BillStatus.success and bill.active is False:
                await cursor.execute(f'''
                    UPDATE {t}
                    SET status = 'expired',
                        updated_at = ?
                    WHERE id = ?
                ''', (datetime.now().isoformat(), payment_id))

                if message_id:
                    try:
                        parsed = json.loads(message_id)
                    except (json.JSONDecodeError, TypeError):
                        parsed = message_id

                    if isinstance(parsed, dict):
                        for role_name, role_dict in parsed.items():
                            for chat_id, msg_id in role_dict.items():
                                try:

                                    await bot.delete_message(chat_id=int(chat_id), message_id=int(msg_id))


                                    if role_name == 'admin':
                                        await bot.send_message(
                                            chat_id=int(chat_id),
                                            text=(
                                                "‚ùå <b>–°–ß–Å–¢ –ü–†–û–°–†–û–ß–ï–ù</b>\n\n"
                                                f"‚è∞ –ö–ª–∏–µ–Ω—Ç {pd[2]} {pd[3]} –Ω–µ –æ–ø–ª–∞—Ç–∏–ª –≤ —Ç–µ—á–µ–Ω–∏–µ 15 –º–∏–Ω—É—Ç."
                                            ),
                                            reply_markup=admin_keyboard,
                                            parse_mode="HTML"
                                        )
                                    else:
                                        await bot.send_message(
                                            chat_id=int(chat_id),
                                            text=(
                                                "‚ùå <b>–í–†–ï–ú–Ø –û–ü–õ–ê–¢–´ –ò–°–¢–ï–ö–õ–û</b>\n\n"
                                                "‚è∞ –í—ã –Ω–µ —É—Å–ø–µ–ª–∏ –æ–ø–ª–∞—Ç–∏—Ç—å –≤ —Ç–µ—á–µ–Ω–∏–µ 15 –º–∏–Ω—É—Ç.\n\n"
                                                "üí° –í—ã –º–æ–∂–µ—Ç–µ –æ–ø–ª–∞—Ç–∏—Ç—å –∑–∞–Ω–æ–≤–æ –≤ –ª–∏—á–Ω–æ–º –∫–∞–±–∏–Ω–µ—Ç–µ"
                                            ),
                                            parse_mode="HTML",
                                            reply_markup=user_keyboard
                                        )
                                except Exception as e:
                                    print(f"–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ {chat_id=} {msg_id=}: {e}")
                    else:
                        try:
                            await bot.delete_message(chat_id=int(user_id), message_id=int(parsed))
                            await bot.send_message(
                                chat_id=int(user_id),
                                text=(
                                    "‚ùå <b>–í–†–ï–ú–Ø –û–ü–õ–ê–¢–´ –ò–°–¢–ï–ö–õ–û</b>\n\n"
                                    "‚è∞ –í—ã –Ω–µ —É—Å–ø–µ–ª–∏ –æ–ø–ª–∞—Ç–∏—Ç—å –≤ —Ç–µ—á–µ–Ω–∏–µ 15 –º–∏–Ω—É—Ç.\n\n"
                                    "üí° –í—ã –º–æ–∂–µ—Ç–µ –æ–ø–ª–∞—Ç–∏—Ç—å –∑–∞–Ω–æ–≤–æ –≤ –ª–∏—á–Ω–æ–º –∫–∞–±–∏–Ω–µ—Ç–µ"
                                ),
                                parse_mode="HTML", reply_markup=user_keyboard
                            )
                        except Exception as e:
                            print(f"–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ {user_id=} {parsed=}: {e}")

                    continue


            try:
                user = await get_user(user_id)

            except Exception as e:

                await cursor.execute(f'''
                    UPDATE {t}
                    SET updated_at = ?
                    WHERE id = ?
                ''', (datetime.now().isoformat(), payment_id))
                continue

            if bill.status == BillStatus.success:
                await cursor.execute(f'''
                    UPDATE {t}
                    SET status = 'success',
                        updated_at = ?,
                        commission = ?
                    WHERE id = ?
                ''', (datetime.now().isoformat(), getattr(bill, 'commission', 0), payment_id))


                await bot.send_message(
                    user_id,
                    f"üéâ <b>–û–ü–õ–ê–¢–ê –ü–†–û–®–õ–ê –£–°–ü–ï–®–ù–û!</b>\n\n"
                    f"‚úÖ –í—ã –º–æ–∂–µ—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –∞—Ä–µ–Ω–¥–æ–π –µ—â—ë <b>{days} –¥–Ω–µ–π</b>.",
                    parse_mode='HTML',
                    reply_markup=user_keyboard
                )

                await add_rent_data(user[1], user[3], days=days)

            elif bill.status == BillStatus.fail:
                await cursor.execute(f'''
                    UPDATE {t}
                    SET status = 'fail',
                        updated_at = ?
                    WHERE id = ?
                ''', (datetime.now().isoformat(), payment_id))



                await bot.send_message(
                    user_id,
                    (
                        "‚ùå <b>–û–ø–ª–∞—Ç–∞ –Ω–µ –ø—Ä–æ—à–ª–∞</b>\n\n"
                        "–í–æ–∑–º–æ–∂–Ω–æ, –Ω–∞ –∫–∞—Ä—Ç–µ –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –∏–ª–∏ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–ø–ª–∞—Ç–µ.\n\n"
                        "üí° <b>–ß—Ç–æ –º–æ–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å?</b>\n"
                        "‚Ä¢ –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –æ–ø–ª–∞—Ç–∏—Ç—å —Å–Ω–æ–≤–∞\n"
                        "‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –¥—Ä—É–≥–æ–π —Å–ø–æ—Å–æ–± –∏–ª–∏ –∫–∞—Ä—Ç—É\n\n"
                        "üîë –ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ <b>–õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç</b>, —á—Ç–æ–±—ã –ø–æ–≤—Ç–æ—Ä–∏—Ç—å –æ–ø–ª–∞—Ç—É."
                    ),
                    parse_mode="HTML", reply_markup=user_keyboard
                ),



                bike = await get_bike_by_id(user[3])
                bike_id, bike_type = bike[1], bike[2]

                pd = await get_personal_data(user[1])

                for admin in admins:
                    await bot.send_message(
                        admin[1],
                        (
                            "‚ö†Ô∏è <b>–ù–µ—É–¥–∞—á–Ω–∞—è –ø–æ–ø—ã—Ç–∫–∞ –æ–ø–ª–∞—Ç—ã</b>\n\n"
                            f"üë§ –ö–ª–∏–µ–Ω—Ç: <code>{pd[2]} {pd[3]}</code>\n"
                            f"üõµ –°–∫—É—Ç–µ—Ä: <b>{bike_type}</b> (ID: <code>{bike_id}</code>)\n"
                            f"‚è≥ –ê—Ä–µ–Ω–¥–∞ –Ω–∞: <b>{days} –¥–Ω–µ–π</b>\n"
                            f"üí∞ –°—É–º–º–∞: <b>{amount} ‚ÇΩ</b>\n\n"
                            "üí° –ö–ª–∏–µ–Ω—Ç –º–æ–∂–µ—Ç –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Å–Ω–æ–≤–∞ –∏–ª–∏ –≤—ã–±—Ä–∞—Ç—å –¥—Ä—É–≥–æ–π —Å–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã."
                        ),
                        parse_mode="HTML",
                        reply_markup=admin_keyboard
                    )

            else:

                await cursor.execute(f'''
                    UPDATE {t}
                    SET updated_at = ?
                    WHERE id = ?
                ''', (datetime.now().isoformat(), payment_id))

        await conn.commit()



async def check_payment_debts(bot: Bot):
    async with aiosqlite.connect(DB_PATH) as conn:
        cursor = await conn.cursor()
        await cursor.execute(f"""
        SELECT user_id, order_id, bill_id, message_id, amount, description
        FROM {t}
        WHERE status = 'pending_debt'
        """)

        pending_payments = await cursor.fetchall()

        for payment in pending_payments:
            user_id, order_id, bill_id, message_id, amount, description = payment

            bill: Bill = await cl.get_bill_status(id=bill_id)

            if bill.active is False and bill.status != BillStatus.success:
                await cursor.execute(f"""
                UPDATE {t}
                SET status = 'expired'
                WHERE order_id = ?
                """, (order_id,))
                await conn.commit()

                keyboard = InlineKeyboardMarkup(
                    inline_keyboard=[
                        [InlineKeyboardButton(text='üìä –õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç', callback_data='profile')],
                        [InlineKeyboardButton(text='üè† –í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', callback_data='main')]
                    ]
                )

                try:
                    await bot.delete_message(chat_id=user_id, message_id=message_id)
                except Exception:
                    pass

                text = (
                    "‚è∞ <b>–ü–õ–ê–¢–ï–ñ –ü–†–û–°–†–û–ß–ï–ù</b>\n\n"
                    "‚ùå <i>–í—Ä–µ–º—è –æ–ø–ª–∞—Ç—ã –∏—Å—Ç–µ–∫–ª–æ</i>\n\n"
                    "üí° <b>–ß—Ç–æ –¥–µ–ª–∞—Ç—å?</b>\n"
                    "‚ñ´Ô∏è –°–æ–∑–¥–∞–π—Ç–µ –Ω–æ–≤—ã–π —Å—á–µ—Ç –¥–ª—è –æ–ø–ª–∞—Ç—ã\n"
                    "‚ñ´Ô∏è –û–ø–ª–∞—Ç–∏—Ç–µ –≤ —Ç–µ—á–µ–Ω–∏–µ 15 –º–∏–Ω—É—Ç\n\n"
                    "‚ö†Ô∏è <i>–°—Ç–∞—Ä—ã–π —Å—á–µ—Ç –±–æ–ª—å—à–µ –Ω–µ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª–µ–Ω</i>"
                )

                await bot.send_message(chat_id=user_id, text=text, parse_mode='HTML', reply_markup=keyboard)

            if bill.status == BillStatus.success:

                await cursor.execute(f"""
                UPDATE {t}
                SET status = 'success'
                WHERE order_id = ?
                """, (order_id,))
                await conn.commit()

                keyboard = InlineKeyboardMarkup(
                    inline_keyboard=[
                        [InlineKeyboardButton(text='üí∞ –ú–æ–∏ –¥–æ–ª–≥–∏', callback_data='my_debts')],
                        [InlineKeyboardButton(text='üè† –í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', callback_data='main')]
                    ]
                )

                try:
                    await bot.delete_message(chat_id=user_id, message_id=message_id)
                except Exception:
                    pass

                description_for_msg = description.replace('_', ': ')

                text = (
                    "‚úÖ <b>–ü–õ–ê–¢–ï–ñ –£–°–ü–ï–®–ù–û –û–ü–õ–ê–ß–ï–ù!</b>\n\n"
                    "üí∞ <i>–°—á–µ—Ç —É—Å–ø–µ—à–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω</i>\n\n"
                    "üéâ <b>–î–æ–ª–≥ –ø–æ–≥–∞—à–µ–Ω</b>\n"
                    f"‚ñ´Ô∏è –°—É–º–º–∞: <b>{amount} ‚ÇΩ</b>\n"
                    f"‚ñ´Ô∏è –û–ø–∏—Å–∞–Ω–∏–µ: {description_for_msg}\n\n"
                    "üíö <i>–°–ø–∞—Å–∏–±–æ –∑–∞ –æ–ø–ª–∞—Ç—É!</i>"
                )

                await cursor.execute("""
                DELETE FROM debts
                WHERE description = ?
                """, (description.split('_')[1], ))

                await conn.commit()

                await bot.send_message(chat_id=user_id, text=text, parse_mode='HTML', reply_markup=keyboard)

            if bill.status == BillStatus.fail:
                await cursor.execute(f"""
                UPDATE {t}
                SET status = 'fail'
                WHERE order_id = ?
                """, (order_id,))
                await conn.commit()

                keyboard = InlineKeyboardMarkup(
                    inline_keyboard=[
                        [InlineKeyboardButton(text="üë®‚Äçüîß –¢–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫–∞ WhatsApp", url="https://wa.me/79188097196")],
                        [InlineKeyboardButton(text="üîÑ –ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Å–Ω–æ–≤–∞", callback_data="retry_payment")],
                        [InlineKeyboardButton(text='üìä –õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç', callback_data='profile')],
                        [InlineKeyboardButton(text='üè† –í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', callback_data='main')]
                    ]
                )

                text = (
                    "‚ùå <b>–ü–õ–ê–¢–ï–ñ –ù–ï –ü–†–û–®–ï–õ</b>\n\n"
                    "üí∏ <i>–û–ø–ª–∞—Ç–∞ –Ω–µ –±—ã–ª–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞</i>\n\n"
                    "‚ö†Ô∏è <b>–í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:</b>\n"
                    "‚ñ´Ô∏è –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –∫–∞—Ä—Ç–µ\n"
                    "‚ñ´Ô∏è –ë–∞–Ω–∫ –æ—Ç–∫–ª–æ–Ω–∏–ª –æ–ø–µ—Ä–∞—Ü–∏—é\n"
                    "‚ñ´Ô∏è –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –ø—Ä–æ–±–ª–µ–º—ã\n\n"
                    "üí° <b>–ù–∞—à–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–∞ –ø–æ–º–æ–∂–µ—Ç:</b>"
                )

                await bot.send_message(chat_id=user_id, text=text, parse_mode='HTML', reply_markup=keyboard)



